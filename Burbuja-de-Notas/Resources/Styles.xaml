<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Estilo de los botones circulares -->
    <Style x:Key="EstiloBotonCircular" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Ellipse Fill="{TemplateBinding Background}"/>
                        <ContentPresenter HorizontalAlignment="Center" 
                                        VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="#F0F0F0"/>
        <Setter Property="FontSize" Value="20"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#E0E0E0"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Efecto de sombra para las ventanas -->
    <DropShadowEffect x:Key="SombraEstandar"
                      BlurRadius="10"         
                      ShadowDepth="5"
                      Opacity="0.3"/>

    <!-- Estilo para botones de control de ventana -->
    <Style x:Key="BotonControlVentana" TargetType="Button">
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="10">
                        <ContentPresenter HorizontalAlignment="Center" 
                                        VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#444"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FFD700"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- Estilo para el botón de cerrar del menú emergente -->
    <Style x:Key="EstiloBotonCerrar" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Ellipse Width="{TemplateBinding Width}" 
                             Height="{TemplateBinding Height}">
                            <Ellipse.Fill>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                    <GradientStop Color="#FFE0A970" Offset="0"/>
                                    <GradientStop Color="#FFE08170" Offset="1"/>
                                </LinearGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <ContentPresenter HorizontalAlignment="Center" 
                                    VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="0.8"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- Popup para colores -->
    <Style TargetType="Popup" x:Key="ColorPickerPopup">
        <Setter Property="IsOpen" Value="False" />
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="PopupAnimation" Value="Fade" />
        <Setter Property="Placement" Value="Bottom" />
    </Style>
    <!-- Estilo para el boton de aplicar el color -->
    <Style x:Key="BotonAplicarColor" TargetType="Button">
        <Setter Property="Margin" Value="0,10,0,0"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="Background" Value="#FFE4B5"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FFD700"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>